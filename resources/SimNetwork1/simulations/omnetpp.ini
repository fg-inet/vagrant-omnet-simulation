[General]
num-rngs = 1
seed-0-mt = 5

image-path=../../images
tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false
sim-time-limit=420s
**.vector-recording = true

# Routing settings
*.*.ipv4.arp.typename = "GlobalArp"
*.*.ipv4.routingTable.netmaskRoutes = ""

##########################################################
#			Simulation parameters                        #
##########################################################
record-eventlog = false
tkenv-default-config = 


##########################################################
#			         channel parameters                  #
##########################################################
**.channelControl.pMax = 20W
**.channelControl.alpha = 1.0

################### RLC parameters #######################
#**.fragmentSize=30B
#**.timeout=50s

################### MAC parameters #######################
**.mac.queueSize = 5MiB
**.mac.macDelay.result-recording-modes = all
**.mac.macThroughput.result-recording-modes = all

# Schedulers
**.mac.schedulingDisciplineDl = "MAXCI"
**.mac.schedulingDisciplineUl = "MAXCI"

################ PhyLayer parameters #####################
**.lteNic.phy.usePropagationDelay = true
#**.lteNic.phy.channelModel=xmldoc("config_channel.xml")

################ Feedback parameters #####################
#**.feedbackComputation = xmldoc("config_channel.xml")

################ Mobility parameters #####################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = true

# UEs
**.enableHandover = false

################# Deployer parameters #######################
# UEs attached to eNB
**.fbDelay = 1

# General
**.deployer.positionUpdateInterval = 0.01s
**.deployer.broadcastMessageInterval = 1s

# RUs
**.deployer.numRus = 0
**.deployer.ruRange = 0
**.deployer.ruTxPower = "0;"
**.deployer.ruStartingAngle = 0deg
**.deployer.antennaCws = "1;" # !!MACRO + RUS (numRus + 1)

# AMC
**.deployer.rbyDl = 12
**.deployer.rbyUl = 12
**.deployer.rbxDl = 7
**.deployer.rbxUl = 7
**.deployer.rbPilotDl = 3
**.deployer.rbPilotUl = 0
**.deployer.signalDl = 1
**.deployer.signalUl = 1
**.deployer.numBands = 100
**.deployer.numPreferredBands = 1

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"
**.mac.amcMode = "AUTO"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 4
**.pfAlpha = 0.95
**.pfTmsAwareDL = false

############### Transmission Power ##################
**.ueTxPower = 26
**.microTxPower = 30
**.*TxPower = 40

**.eNodeB.macCellId = 1
**.eNodeB.macNodeId = 1
**.eNodeBCount = 1


#####################################################################################################################################
#####################################################################################################################################
#####################################################################################################################################
############################################## Simulation on a simple network Topology ##############################################
#####################################################################################################################################
#####################################################################################################################################
#####################################################################################################################################

[Config SimulationBase]
network = simpleNetwork
description = "Simulations using a simple network topology"

**.tcpType = "TCP"

# tcp general settings
**.tcp.advertisedWindow = 65535                      # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = false                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TCPReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.recordStats = true # recording of seqNum etc. into output vectors enabled/disabled

# Schedulers
**.mac.schedulingDisciplineDl = "MAXCI"
**.mac.schedulingDisciplineUl = "MAXCI"

# connect each UE to the eNB
**.ue[*].macCellId = 1
**.ue[*].masterId = 1

# positioning and mobility
*.ue[*].mobility.acceleration = 0
*.ue[*].mobility.angle = 0deg
*.ue[*].mobility.constraintAreaMaxX = 4000m
*.ue[*].mobility.constraintAreaMaxY = 4000m
*.ue[*].mobility.constraintAreaMinX = 0m
*.ue[*].mobility.constraintAreaMinY = 0m
*.ue[*].mobility.initFromDisplayString = false
*.ue[*].mobility.initialZ = 0
*.ue[*].mobility.speed = 0mps
*.ue[*].mobilityType = "LinearMobility"

*.ue[*].maxBytesPerTti = 3000KiB

#============= Application Setup =============

#YouTube estimates roughly based on https://www.androidauthority.com/how-much-data-does-youtube-use-964560/

#==Video Server configuration==
# The generic tcp server application
*.VideoServer.numTcpApps = 1
*.VideoServer.tcpApp[0].typename = "TCPGenericSrvApp"
*.VideoServer.tcpApp[0].localAddress = "VideoServer"
*.VideoServer.tcpApp[0].localPort = 1234

#==Configuration of the mobile hosts - ue[0] and ue[1]==
*.ue[*].numTcpApps = 1

# The TCP Video streaming client - overall setup
*.ue[*].tcpApp[0].typename = "TCPVideoStreamCliApp" #The application
*.ue[*].tcpApp[0].localAddress = "" #Local address of the host
*.ue[*].tcpApp[0].localPort = 2001 #local port at the host
*.ue[*].tcpApp[0].connectAddress = "VideoServer" #server to connect to
*.ue[*].tcpApp[0].connectPort = 1234 #port at the server to connect to
*.ue[*].tcpApp[0].dataTransferMode = "object" #Can be "bytecount","object","bytestream"
*.ue[*].tcpApp[0].startTime = uniform(0.0s,0.12s) #time first session begins
*.ue[*].tcpApp[0].stopTime = 1600.0s #time of finish sending, 0 means infinity
*.ue[*].tcpApp[0].idleInterval = 5.0s #time gap between sessions
*.ue[*].tcpApp[0].thinkTime = 0.5s #time gap between requests
*.ue[*].tcpApp[0].numRequestsPerSession = 5

### Scenarios ###

###################### TEST A #############################

[Config testA_ds0]
extends = SimulationBase
description = "Saturation test with various numbers of UEs and single distribution area + 3 levels of video bitrate"

seed-0-mt = 5

# LTE channel settings stuff
**.lteNic.phy.channelModel=xmldoc("configs/config_channel.xml")
**.feedbackComputation = xmldoc("configs/config_channel.xml")

#Results folder
**.resFolder = ${name="results/test8/"}
eventlog-file = results/${configname}/${configname}-${runnumber}.elog
output-vector-file = results/${configname}/${configname}-${runnumber}.vec
output-scalar-file = results/${configname}/${configname}-${runnumber}.sca

### Scenario specific settings ###
*.eNodeB.mobility.initialX = 750m
*.eNodeB.mobility.initialY = 750m
*.eNodeB.mobility.initFromDisplayString = false

simpleNetwork.numUe = ${UE=20,40,60,80,100,120,140,160,180,200}

**.channelControl.carrierFrequency = ${CF=2100e+6Hz}
# Configs in config_channel.xml:
#   - carrierFrequency: 2.1 GHz
#   - building-height: 0
**.deployer.numRbDl = ${RB=100} #20 MHz
**.deployer.numRbUl = ${RB} #20 MHz
*.ue[*].mobility.initialX = 750m + uniform(-${DIST=250m},${DIST})
*.ue[*].mobility.initialY = 750m + uniform(-${DIST},${DIST})

#Set video bitrates for the video clients
**.video_packet_size_per_second = "500 1500 3000"

# The TCP Video streaming client specific settings - DASH specific setup
*.ue[*].tcpApp[0].video_buffer_max_length = 30s # buffer max length in seconds
*.ue[*].tcpApp[0].video_duration = 300s #video length in seconds
*.ue[*].tcpApp[0].segment_length = 5s

########## Different seed 1 ##############

[Config testA_ds1]
extends = SimulationBase
description = "Saturation test with various numbers of UEs and single distribution area + 3 levels of video bitrate"

seed-0-mt = 41326

# LTE channel settings stuff
**.lteNic.phy.channelModel=xmldoc("configs/config_channel.xml")
**.feedbackComputation = xmldoc("configs/config_channel.xml")

#Results folder
**.resFolder = ${name="results/test8/"}
eventlog-file = results/${configname}/${configname}-${runnumber}.elog
output-vector-file = results/${configname}/${configname}-${runnumber}.vec
output-scalar-file = results/${configname}/${configname}-${runnumber}.sca

### Scenario specific settings ###
*.eNodeB.mobility.initialX = 750m
*.eNodeB.mobility.initialY = 750m
*.eNodeB.mobility.initFromDisplayString = false

simpleNetwork.numUe = ${UE=20,40,60,80,100,120,140,160,180,200}

**.channelControl.carrierFrequency = ${CF=2100e+6Hz}
# Configs in config_channel.xml:
#   - carrierFrequency: 2.1 GHz
#   - building-height: 0
**.deployer.numRbDl = ${RB=100} #20 MHz
**.deployer.numRbUl = ${RB} #20 MHz
*.ue[*].mobility.initialX = 750m + uniform(-${DIST=250m},${DIST})
*.ue[*].mobility.initialY = 750m + uniform(-${DIST},${DIST})

#Set video bitrates for the video clients
**.video_packet_size_per_second = "500 1500 3000"

# The TCP Video streaming client specific settings - DASH specific setup
*.ue[*].tcpApp[0].video_buffer_max_length = 30s # buffer max length in seconds
*.ue[*].tcpApp[0].video_duration = 300s #video length in seconds
*.ue[*].tcpApp[0].segment_length = 5s

########## Different seed 2 ##############

[Config testA_ds2]
extends = SimulationBase
description = "Saturation test with various numbers of UEs and single distribution area + 3 levels of video bitrate"

seed-0-mt = 6780123

# LTE channel settings stuff
**.lteNic.phy.channelModel=xmldoc("configs/config_channel.xml")
**.feedbackComputation = xmldoc("configs/config_channel.xml")

#Results folder
**.resFolder = ${name="results/test8/"}
eventlog-file = results/${configname}/${configname}-${runnumber}.elog
output-vector-file = results/${configname}/${configname}-${runnumber}.vec
output-scalar-file = results/${configname}/${configname}-${runnumber}.sca

### Scenario specific settings ###
*.eNodeB.mobility.initialX = 750m
*.eNodeB.mobility.initialY = 750m
*.eNodeB.mobility.initFromDisplayString = false

simpleNetwork.numUe = ${UE=20,40,60,80,100,120,140,160,180,200}

**.channelControl.carrierFrequency = ${CF=2100e+6Hz}
# Configs in config_channel.xml:
#   - carrierFrequency: 2.1 GHz
#   - building-height: 0
**.deployer.numRbDl = ${RB=100} #20 MHz
**.deployer.numRbUl = ${RB} #20 MHz
*.ue[*].mobility.initialX = 750m + uniform(-${DIST=250m},${DIST})
*.ue[*].mobility.initialY = 750m + uniform(-${DIST},${DIST})

#Set video bitrates for the video clients
**.video_packet_size_per_second = "500 1500 3000"

# The TCP Video streaming client specific settings - DASH specific setup
*.ue[*].tcpApp[0].video_buffer_max_length = 30s # buffer max length in seconds
*.ue[*].tcpApp[0].video_duration = 300s #video length in seconds
*.ue[*].tcpApp[0].segment_length = 5s

########## Different seed 3 ##############

[Config testA_ds3]
extends = SimulationBase
description = "Saturation test with various numbers of UEs and single distribution area + 3 levels of video bitrate"

seed-0-mt = 510959834

# LTE channel settings stuff
**.lteNic.phy.channelModel=xmldoc("configs/config_channel.xml")
**.feedbackComputation = xmldoc("configs/config_channel.xml")

#Results folder
**.resFolder = ${name="results/test8/"}
eventlog-file = results/${configname}/${configname}-${runnumber}.elog
output-vector-file = results/${configname}/${configname}-${runnumber}.vec
output-scalar-file = results/${configname}/${configname}-${runnumber}.sca

### Scenario specific settings ###
*.eNodeB.mobility.initialX = 750m
*.eNodeB.mobility.initialY = 750m
*.eNodeB.mobility.initFromDisplayString = false

simpleNetwork.numUe = ${UE=20,40,60,80,100,120,140,160,180,200}

**.channelControl.carrierFrequency = ${CF=2100e+6Hz}
# Configs in config_channel.xml:
#   - carrierFrequency: 2.1 GHz
#   - building-height: 0
**.deployer.numRbDl = ${RB=100} #20 MHz
**.deployer.numRbUl = ${RB} #20 MHz
*.ue[*].mobility.initialX = 750m + uniform(-${DIST=250m},${DIST})
*.ue[*].mobility.initialY = 750m + uniform(-${DIST},${DIST})

#Set video bitrates for the video clients
**.video_packet_size_per_second = "500 1500 3000"

# The TCP Video streaming client specific settings - DASH specific setup
*.ue[*].tcpApp[0].video_buffer_max_length = 30s # buffer max length in seconds
*.ue[*].tcpApp[0].video_duration = 300s #video length in seconds
*.ue[*].tcpApp[0].segment_length = 5s